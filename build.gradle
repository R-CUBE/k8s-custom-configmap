plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'net.linguica.maven-settings' version '0.5'
}

group = 'com.rcube.configmap'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.javaoperatorsdk:operator-framework-spring-boot-starter:5.0.0'
    annotationProcessor 'io.javaoperatorsdk:operator-framework:4.3.1'
    annotationProcessor 'io.fabric8:crd-generator-apt:6.5.1'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-guava:2.14.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.15.2'
    implementation 'com.networknt:json-schema-validator:1.0.83'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation("io.javaoperatorsdk:operator-framework-spring-boot-starter-test:5.0.0"){
        exclude module: 'log4j-slf4j2-impl'
    }
}

tasks.register('copyCRDResource', Copy) {
    description = "Copy generated CRD from build folder to install directory"
    from layout.buildDirectory.dir("classes/java/main/META-INF/fabric8")
    include "*.yml"
    into './install/cluster'
}

tasks.named('test') {
    dependsOn('copyCRDResource')
    useJUnitPlatform()
}
